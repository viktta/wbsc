{"ast":null,"code":"var Emitter = require('component-emitter');\n\nvar SCChannel = function (name, client, options) {\n  var self = this;\n  Emitter.call(this);\n  this.PENDING = 'pending';\n  this.SUBSCRIBED = 'subscribed';\n  this.UNSUBSCRIBED = 'unsubscribed';\n  this.name = name;\n  this.state = this.UNSUBSCRIBED;\n  this.client = client;\n  this.options = options || {};\n  this.setOptions(this.options);\n};\n\nSCChannel.prototype = Object.create(Emitter.prototype);\n\nSCChannel.prototype.setOptions = function (options) {\n  if (!options) {\n    options = {};\n  }\n\n  this.waitForAuth = options.waitForAuth || false;\n  this.batch = options.batch || false;\n\n  if (options.data !== undefined) {\n    this.data = options.data;\n  }\n};\n\nSCChannel.prototype.getState = function () {\n  return this.state;\n};\n\nSCChannel.prototype.subscribe = function (options) {\n  this.client.subscribe(this.name, options);\n};\n\nSCChannel.prototype.unsubscribe = function () {\n  this.client.unsubscribe(this.name);\n};\n\nSCChannel.prototype.isSubscribed = function (includePending) {\n  return this.client.isSubscribed(this.name, includePending);\n};\n\nSCChannel.prototype.publish = function (data, callback) {\n  this.client.publish(this.name, data, callback);\n};\n\nSCChannel.prototype.watch = function (handler) {\n  this.client.watch(this.name, handler);\n};\n\nSCChannel.prototype.unwatch = function (handler) {\n  this.client.unwatch(this.name, handler);\n};\n\nSCChannel.prototype.watchers = function () {\n  return this.client.watchers(this.name);\n};\n\nSCChannel.prototype.destroy = function () {\n  this.client.destroyChannel(this.name);\n};\n\nmodule.exports.SCChannel = SCChannel;","map":{"version":3,"sources":["C:/Users/aleor/Desktop/Code/wbsc/frontend/node_modules/sc-channel/index.js"],"names":["Emitter","require","SCChannel","name","client","options","self","call","PENDING","SUBSCRIBED","UNSUBSCRIBED","state","setOptions","prototype","Object","create","waitForAuth","batch","data","undefined","getState","subscribe","unsubscribe","isSubscribed","includePending","publish","callback","watch","handler","unwatch","watchers","destroy","destroyChannel","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,mBAAD,CAArB;;AAEA,IAAIC,SAAS,GAAG,UAAUC,IAAV,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAiC;AAC/C,MAAIC,IAAI,GAAG,IAAX;AAEAN,EAAAA,OAAO,CAACO,IAAR,CAAa,IAAb;AAEA,OAAKC,OAAL,GAAe,SAAf;AACA,OAAKC,UAAL,GAAkB,YAAlB;AACA,OAAKC,YAAL,GAAoB,cAApB;AAEA,OAAKP,IAAL,GAAYA,IAAZ;AACA,OAAKQ,KAAL,GAAa,KAAKD,YAAlB;AACA,OAAKN,MAAL,GAAcA,MAAd;AAEA,OAAKC,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACA,OAAKO,UAAL,CAAgB,KAAKP,OAArB;AACD,CAfD;;AAiBAH,SAAS,CAACW,SAAV,GAAsBC,MAAM,CAACC,MAAP,CAAcf,OAAO,CAACa,SAAtB,CAAtB;;AAEAX,SAAS,CAACW,SAAV,CAAoBD,UAApB,GAAiC,UAAUP,OAAV,EAAmB;AAClD,MAAI,CAACA,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAG,EAAV;AACD;;AACD,OAAKW,WAAL,GAAmBX,OAAO,CAACW,WAAR,IAAuB,KAA1C;AACA,OAAKC,KAAL,GAAaZ,OAAO,CAACY,KAAR,IAAiB,KAA9B;;AAEA,MAAIZ,OAAO,CAACa,IAAR,KAAiBC,SAArB,EAAgC;AAC9B,SAAKD,IAAL,GAAYb,OAAO,CAACa,IAApB;AACD;AACF,CAVD;;AAYAhB,SAAS,CAACW,SAAV,CAAoBO,QAApB,GAA+B,YAAY;AACzC,SAAO,KAAKT,KAAZ;AACD,CAFD;;AAIAT,SAAS,CAACW,SAAV,CAAoBQ,SAApB,GAAgC,UAAUhB,OAAV,EAAmB;AACjD,OAAKD,MAAL,CAAYiB,SAAZ,CAAsB,KAAKlB,IAA3B,EAAiCE,OAAjC;AACD,CAFD;;AAIAH,SAAS,CAACW,SAAV,CAAoBS,WAApB,GAAkC,YAAY;AAC5C,OAAKlB,MAAL,CAAYkB,WAAZ,CAAwB,KAAKnB,IAA7B;AACD,CAFD;;AAIAD,SAAS,CAACW,SAAV,CAAoBU,YAApB,GAAmC,UAAUC,cAAV,EAA0B;AAC3D,SAAO,KAAKpB,MAAL,CAAYmB,YAAZ,CAAyB,KAAKpB,IAA9B,EAAoCqB,cAApC,CAAP;AACD,CAFD;;AAIAtB,SAAS,CAACW,SAAV,CAAoBY,OAApB,GAA8B,UAAUP,IAAV,EAAgBQ,QAAhB,EAA0B;AACtD,OAAKtB,MAAL,CAAYqB,OAAZ,CAAoB,KAAKtB,IAAzB,EAA+Be,IAA/B,EAAqCQ,QAArC;AACD,CAFD;;AAIAxB,SAAS,CAACW,SAAV,CAAoBc,KAApB,GAA4B,UAAUC,OAAV,EAAmB;AAC7C,OAAKxB,MAAL,CAAYuB,KAAZ,CAAkB,KAAKxB,IAAvB,EAA6ByB,OAA7B;AACD,CAFD;;AAIA1B,SAAS,CAACW,SAAV,CAAoBgB,OAApB,GAA8B,UAAUD,OAAV,EAAmB;AAC/C,OAAKxB,MAAL,CAAYyB,OAAZ,CAAoB,KAAK1B,IAAzB,EAA+ByB,OAA/B;AACD,CAFD;;AAIA1B,SAAS,CAACW,SAAV,CAAoBiB,QAApB,GAA+B,YAAY;AACzC,SAAO,KAAK1B,MAAL,CAAY0B,QAAZ,CAAqB,KAAK3B,IAA1B,CAAP;AACD,CAFD;;AAIAD,SAAS,CAACW,SAAV,CAAoBkB,OAApB,GAA8B,YAAY;AACxC,OAAK3B,MAAL,CAAY4B,cAAZ,CAA2B,KAAK7B,IAAhC;AACD,CAFD;;AAIA8B,MAAM,CAACC,OAAP,CAAehC,SAAf,GAA2BA,SAA3B","sourcesContent":["var Emitter = require('component-emitter');\n\nvar SCChannel = function (name, client, options) {\n  var self = this;\n\n  Emitter.call(this);\n\n  this.PENDING = 'pending';\n  this.SUBSCRIBED = 'subscribed';\n  this.UNSUBSCRIBED = 'unsubscribed';\n\n  this.name = name;\n  this.state = this.UNSUBSCRIBED;\n  this.client = client;\n\n  this.options = options || {};\n  this.setOptions(this.options);\n};\n\nSCChannel.prototype = Object.create(Emitter.prototype);\n\nSCChannel.prototype.setOptions = function (options) {\n  if (!options) {\n    options = {};\n  }\n  this.waitForAuth = options.waitForAuth || false;\n  this.batch = options.batch || false;\n\n  if (options.data !== undefined) {\n    this.data = options.data;\n  }\n};\n\nSCChannel.prototype.getState = function () {\n  return this.state;\n};\n\nSCChannel.prototype.subscribe = function (options) {\n  this.client.subscribe(this.name, options);\n};\n\nSCChannel.prototype.unsubscribe = function () {\n  this.client.unsubscribe(this.name);\n};\n\nSCChannel.prototype.isSubscribed = function (includePending) {\n  return this.client.isSubscribed(this.name, includePending);\n};\n\nSCChannel.prototype.publish = function (data, callback) {\n  this.client.publish(this.name, data, callback);\n};\n\nSCChannel.prototype.watch = function (handler) {\n  this.client.watch(this.name, handler);\n};\n\nSCChannel.prototype.unwatch = function (handler) {\n  this.client.unwatch(this.name, handler);\n};\n\nSCChannel.prototype.watchers = function () {\n  return this.client.watchers(this.name);\n};\n\nSCChannel.prototype.destroy = function () {\n  this.client.destroyChannel(this.name);\n};\n\nmodule.exports.SCChannel = SCChannel;\n"]},"metadata":{},"sourceType":"script"}