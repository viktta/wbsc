{"ast":null,"code":"var scErrors = require('sc-errors');\n\nvar InvalidActionError = scErrors.InvalidActionError;\n\nvar Response = function (socket, id) {\n  this.socket = socket;\n  this.id = id;\n  this.sent = false;\n};\n\nResponse.prototype._respond = function (responseData) {\n  if (this.sent) {\n    throw new InvalidActionError('Response ' + this.id + ' has already been sent');\n  } else {\n    this.sent = true;\n    this.socket.send(this.socket.encode(responseData));\n  }\n};\n\nResponse.prototype.end = function (data) {\n  if (this.id) {\n    var responseData = {\n      rid: this.id\n    };\n\n    if (data !== undefined) {\n      responseData.data = data;\n    }\n\n    this._respond(responseData);\n  }\n};\n\nResponse.prototype.error = function (error, data) {\n  if (this.id) {\n    var err = scErrors.dehydrateError(error);\n    var responseData = {\n      rid: this.id,\n      error: err\n    };\n\n    if (data !== undefined) {\n      responseData.data = data;\n    }\n\n    this._respond(responseData);\n  }\n};\n\nResponse.prototype.callback = function (error, data) {\n  if (error) {\n    this.error(error, data);\n  } else {\n    this.end(data);\n  }\n};\n\nmodule.exports.Response = Response;","map":{"version":3,"sources":["C:/Users/aleor/Desktop/Code/wbsc/frontend/node_modules/socketcluster-client/lib/response.js"],"names":["scErrors","require","InvalidActionError","Response","socket","id","sent","prototype","_respond","responseData","send","encode","end","data","rid","undefined","error","err","dehydrateError","callback","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAIC,kBAAkB,GAAGF,QAAQ,CAACE,kBAAlC;;AAEA,IAAIC,QAAQ,GAAG,UAAUC,MAAV,EAAkBC,EAAlB,EAAsB;AACnC,OAAKD,MAAL,GAAcA,MAAd;AACA,OAAKC,EAAL,GAAUA,EAAV;AACA,OAAKC,IAAL,GAAY,KAAZ;AACD,CAJD;;AAMAH,QAAQ,CAACI,SAAT,CAAmBC,QAAnB,GAA8B,UAAUC,YAAV,EAAwB;AACpD,MAAI,KAAKH,IAAT,EAAe;AACb,UAAM,IAAIJ,kBAAJ,CAAuB,cAAc,KAAKG,EAAnB,GAAwB,wBAA/C,CAAN;AACD,GAFD,MAEO;AACL,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKF,MAAL,CAAYM,IAAZ,CAAiB,KAAKN,MAAL,CAAYO,MAAZ,CAAmBF,YAAnB,CAAjB;AACD;AACF,CAPD;;AASAN,QAAQ,CAACI,SAAT,CAAmBK,GAAnB,GAAyB,UAAUC,IAAV,EAAgB;AACvC,MAAI,KAAKR,EAAT,EAAa;AACX,QAAII,YAAY,GAAG;AACjBK,MAAAA,GAAG,EAAE,KAAKT;AADO,KAAnB;;AAGA,QAAIQ,IAAI,KAAKE,SAAb,EAAwB;AACtBN,MAAAA,YAAY,CAACI,IAAb,GAAoBA,IAApB;AACD;;AACD,SAAKL,QAAL,CAAcC,YAAd;AACD;AACF,CAVD;;AAYAN,QAAQ,CAACI,SAAT,CAAmBS,KAAnB,GAA2B,UAAUA,KAAV,EAAiBH,IAAjB,EAAuB;AAChD,MAAI,KAAKR,EAAT,EAAa;AACX,QAAIY,GAAG,GAAGjB,QAAQ,CAACkB,cAAT,CAAwBF,KAAxB,CAAV;AAEA,QAAIP,YAAY,GAAG;AACjBK,MAAAA,GAAG,EAAE,KAAKT,EADO;AAEjBW,MAAAA,KAAK,EAAEC;AAFU,KAAnB;;AAIA,QAAIJ,IAAI,KAAKE,SAAb,EAAwB;AACtBN,MAAAA,YAAY,CAACI,IAAb,GAAoBA,IAApB;AACD;;AAED,SAAKL,QAAL,CAAcC,YAAd;AACD;AACF,CAdD;;AAgBAN,QAAQ,CAACI,SAAT,CAAmBY,QAAnB,GAA8B,UAAUH,KAAV,EAAiBH,IAAjB,EAAuB;AACnD,MAAIG,KAAJ,EAAW;AACT,SAAKA,KAAL,CAAWA,KAAX,EAAkBH,IAAlB;AACD,GAFD,MAEO;AACL,SAAKD,GAAL,CAASC,IAAT;AACD;AACF,CAND;;AAQAO,MAAM,CAACC,OAAP,CAAelB,QAAf,GAA0BA,QAA1B","sourcesContent":["var scErrors = require('sc-errors');\r\nvar InvalidActionError = scErrors.InvalidActionError;\r\n\r\nvar Response = function (socket, id) {\r\n  this.socket = socket;\r\n  this.id = id;\r\n  this.sent = false;\r\n};\r\n\r\nResponse.prototype._respond = function (responseData) {\r\n  if (this.sent) {\r\n    throw new InvalidActionError('Response ' + this.id + ' has already been sent');\r\n  } else {\r\n    this.sent = true;\r\n    this.socket.send(this.socket.encode(responseData));\r\n  }\r\n};\r\n\r\nResponse.prototype.end = function (data) {\r\n  if (this.id) {\r\n    var responseData = {\r\n      rid: this.id\r\n    };\r\n    if (data !== undefined) {\r\n      responseData.data = data;\r\n    }\r\n    this._respond(responseData);\r\n  }\r\n};\r\n\r\nResponse.prototype.error = function (error, data) {\r\n  if (this.id) {\r\n    var err = scErrors.dehydrateError(error);\r\n\r\n    var responseData = {\r\n      rid: this.id,\r\n      error: err\r\n    };\r\n    if (data !== undefined) {\r\n      responseData.data = data;\r\n    }\r\n\r\n    this._respond(responseData);\r\n  }\r\n};\r\n\r\nResponse.prototype.callback = function (error, data) {\r\n  if (error) {\r\n    this.error(error, data);\r\n  } else {\r\n    this.end(data);\r\n  }\r\n};\r\n\r\nmodule.exports.Response = Response;\r\n"]},"metadata":{},"sourceType":"script"}