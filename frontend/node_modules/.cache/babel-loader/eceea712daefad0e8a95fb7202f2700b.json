{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api/',\n  timeout: 5000,\n  headers: {\n    'Authorization': \"JWT \" + localStorage.getItem('access_token'),\n    'Content-Type': 'application/json',\n    'accept': 'application/json'\n  }\n});\naxiosInstance.interceptors.response.use(response => response, error => {\n  const originalRequest = error.config;\n\n  if (error.response.status === 401 && error.response.statusText === \"Unauthorized\") {\n    const refresh_token = localStorage.getItem('refresh_token');\n    return axiosInstance.post('/token/refresh/', {\n      refresh: refresh_token\n    }).then(response => {\n      localStorage.setItem('access_token', response.data.access);\n      localStorage.setItem('refresh_token', response.data.refresh);\n      axiosInstance.defaults.headers['Authorization'] = \"JWT \" + response.data.access;\n      originalRequest.headers['Authorization'] = \"JWT \" + response.data.access;\n      return axiosInstance(originalRequest);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"sources":["C:/Users/aleor/desktop/Code/wbsc/frontend/src/Components/axiosApi.js"],"names":["axios","axiosInstance","create","baseURL","timeout","headers","localStorage","getItem","interceptors","response","use","error","originalRequest","config","status","statusText","refresh_token","post","refresh","then","setItem","data","access","defaults","catch","err","console","log","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAE,4BADsB;AAE/BC,EAAAA,OAAO,EAAE,IAFsB;AAG/BC,EAAAA,OAAO,EAAE;AACL,qBAAiB,SAASC,YAAY,CAACC,OAAb,CAAqB,cAArB,CADrB;AAEL,oBAAgB,kBAFX;AAGL,cAAU;AAHL;AAHsB,CAAb,CAAtB;AASAN,aAAa,CAACO,YAAd,CAA2BC,QAA3B,CAAoCC,GAApC,CACID,QAAQ,IAAIA,QADhB,EAEIE,KAAK,IAAI;AACL,QAAMC,eAAe,GAAGD,KAAK,CAACE,MAA9B;;AAEA,MAAIF,KAAK,CAACF,QAAN,CAAeK,MAAf,KAA0B,GAA1B,IAAiCH,KAAK,CAACF,QAAN,CAAeM,UAAf,KAA8B,cAAnE,EAAmF;AAC/E,UAAMC,aAAa,GAAGV,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAtB;AAEA,WAAON,aAAa,CACfgB,IADE,CACG,iBADH,EACsB;AAAEC,MAAAA,OAAO,EAAEF;AAAX,KADtB,EAEFG,IAFE,CAEIV,QAAD,IAAc;AAEhBH,MAAAA,YAAY,CAACc,OAAb,CAAqB,cAArB,EAAqCX,QAAQ,CAACY,IAAT,CAAcC,MAAnD;AACAhB,MAAAA,YAAY,CAACc,OAAb,CAAqB,eAArB,EAAsCX,QAAQ,CAACY,IAAT,CAAcH,OAApD;AAEAjB,MAAAA,aAAa,CAACsB,QAAd,CAAuBlB,OAAvB,CAA+B,eAA/B,IAAkD,SAASI,QAAQ,CAACY,IAAT,CAAcC,MAAzE;AACAV,MAAAA,eAAe,CAACP,OAAhB,CAAwB,eAAxB,IAA2C,SAASI,QAAQ,CAACY,IAAT,CAAcC,MAAlE;AAEA,aAAOrB,aAAa,CAACW,eAAD,CAApB;AACH,KAXE,EAYFY,KAZE,CAYIC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAdE,CAAP;AAeH;;AACD,SAAOG,OAAO,CAACC,MAAR,CAAelB,KAAf,CAAP;AACH,CAzBL;AA2BA,eAAeV,aAAf","sourcesContent":["import axios from 'axios'\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'http://127.0.0.1:8000/api/',\r\n    timeout: 5000,\r\n    headers: {\r\n        'Authorization': \"JWT \" + localStorage.getItem('access_token'),\r\n        'Content-Type': 'application/json',\r\n        'accept': 'application/json'\r\n    }\r\n});\r\naxiosInstance.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n        const originalRequest = error.config;\r\n\r\n        if (error.response.status === 401 && error.response.statusText === \"Unauthorized\") {\r\n            const refresh_token = localStorage.getItem('refresh_token');\r\n\r\n            return axiosInstance\r\n                .post('/token/refresh/', { refresh: refresh_token })\r\n                .then((response) => {\r\n\r\n                    localStorage.setItem('access_token', response.data.access);\r\n                    localStorage.setItem('refresh_token', response.data.refresh);\r\n\r\n                    axiosInstance.defaults.headers['Authorization'] = \"JWT \" + response.data.access;\r\n                    originalRequest.headers['Authorization'] = \"JWT \" + response.data.access;\r\n\r\n                    return axiosInstance(originalRequest);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                });\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nexport default axiosInstance"]},"metadata":{},"sourceType":"module"}