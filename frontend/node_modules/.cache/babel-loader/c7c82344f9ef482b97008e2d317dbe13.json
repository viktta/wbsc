{"ast":null,"code":"var Emitter = require('component-emitter');\n\nvar Response = require('./response').Response;\n\nvar querystring = require('querystring');\n\nvar WebSocket;\nvar createWebSocket;\n\nif (global.WebSocket) {\n  WebSocket = global.WebSocket;\n\n  createWebSocket = function (uri, options) {\n    return new WebSocket(uri);\n  };\n} else {\n  WebSocket = require('ws');\n\n  createWebSocket = function (uri, options) {\n    return new WebSocket(uri, null, options);\n  };\n}\n\nvar scErrors = require('sc-errors');\n\nvar TimeoutError = scErrors.TimeoutError;\nvar BadConnectionError = scErrors.BadConnectionError;\n\nvar SCTransport = function (authEngine, codecEngine, options) {\n  var self = this;\n  this.state = this.CLOSED;\n  this.auth = authEngine;\n  this.codec = codecEngine;\n  this.options = options;\n  this.connectTimeout = options.connectTimeout;\n  this.pingTimeout = options.ackTimeout;\n  this.pingTimeoutDisabled = !!options.pingTimeoutDisabled;\n  this.callIdGenerator = options.callIdGenerator;\n  this.authTokenName = options.authTokenName;\n  this._pingTimeoutTicker = null;\n  this._callbackMap = {};\n  this._batchSendList = []; // Open the connection.\n\n  this.state = this.CONNECTING;\n  var uri = this.uri();\n  var wsSocket = createWebSocket(uri, this.options);\n  wsSocket.binaryType = this.options.binaryType;\n  this.socket = wsSocket;\n\n  wsSocket.onopen = function () {\n    self._onOpen();\n  };\n\n  wsSocket.onclose = function (event) {\n    var code;\n\n    if (event.code == null) {\n      // This is to handle an edge case in React Native whereby\n      // event.code is undefined when the mobile device is locked.\n      // TODO: This is not perfect since this condition could also apply to\n      // an abnormal close (no close control frame) which would be a 1006.\n      code = 1005;\n    } else {\n      code = event.code;\n    }\n\n    self._onClose(code, event.reason);\n  };\n\n  wsSocket.onmessage = function (message, flags) {\n    self._onMessage(message.data);\n  };\n\n  wsSocket.onerror = function (error) {\n    // The onclose event will be called automatically after the onerror event\n    // if the socket is connected - Otherwise, if it's in the middle of\n    // connecting, we want to close it manually with a 1006 - This is necessary\n    // to prevent inconsistent behavior when running the client in Node.js\n    // vs in a browser.\n    if (self.state === self.CONNECTING) {\n      self._onClose(1006);\n    }\n  };\n\n  this._connectTimeoutRef = setTimeout(function () {\n    self._onClose(4007);\n\n    self.socket.close(4007);\n  }, this.connectTimeout);\n};\n\nSCTransport.prototype = Object.create(Emitter.prototype);\nSCTransport.CONNECTING = SCTransport.prototype.CONNECTING = 'connecting';\nSCTransport.OPEN = SCTransport.prototype.OPEN = 'open';\nSCTransport.CLOSED = SCTransport.prototype.CLOSED = 'closed';\n\nSCTransport.prototype.uri = function () {\n  var query = this.options.query || {};\n  var schema = this.options.secure ? 'wss' : 'ws';\n\n  if (this.options.timestampRequests) {\n    query[this.options.timestampParam] = new Date().getTime();\n  }\n\n  query = querystring.encode(query);\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var host;\n\n  if (this.options.host) {\n    host = this.options.host;\n  } else {\n    var port = '';\n\n    if (this.options.port && (schema === 'wss' && this.options.port !== 443 || schema === 'ws' && this.options.port !== 80)) {\n      port = ':' + this.options.port;\n    }\n\n    host = this.options.hostname + port;\n  }\n\n  return schema + '://' + host + this.options.path + query;\n};\n\nSCTransport.prototype._onOpen = function () {\n  var self = this;\n  clearTimeout(this._connectTimeoutRef);\n\n  this._resetPingTimeout();\n\n  this._handshake(function (err, status) {\n    if (err) {\n      var statusCode;\n\n      if (status && status.code) {\n        statusCode = status.code;\n      } else {\n        statusCode = 4003;\n      }\n\n      self._onError(err);\n\n      self._onClose(statusCode, err.toString());\n\n      self.socket.close(statusCode);\n    } else {\n      self.state = self.OPEN;\n      Emitter.prototype.emit.call(self, 'open', status);\n\n      self._resetPingTimeout();\n    }\n  });\n};\n\nSCTransport.prototype._handshake = function (callback) {\n  var self = this;\n  this.auth.loadToken(this.authTokenName, function (err, token) {\n    if (err) {\n      callback(err);\n    } else {\n      // Don't wait for this.state to be 'open'.\n      // The underlying WebSocket (this.socket) is already open.\n      var options = {\n        force: true\n      };\n      self.emit('#handshake', {\n        authToken: token\n      }, options, function (err, status) {\n        if (status) {\n          // Add the token which was used as part of authentication attempt\n          // to the status object.\n          status.authToken = token;\n\n          if (status.authError) {\n            status.authError = scErrors.hydrateError(status.authError);\n          }\n        }\n\n        callback(err, status);\n      });\n    }\n  });\n};\n\nSCTransport.prototype._abortAllPendingEventsDueToBadConnection = function (failureType) {\n  for (var i in this._callbackMap) {\n    if (this._callbackMap.hasOwnProperty(i)) {\n      var eventObject = this._callbackMap[i];\n      delete this._callbackMap[i];\n      clearTimeout(eventObject.timeout);\n      delete eventObject.timeout;\n      var errorMessage = \"Event '\" + eventObject.event + \"' was aborted due to a bad connection\";\n      var badConnectionError = new BadConnectionError(errorMessage, failureType);\n      var callback = eventObject.callback;\n      delete eventObject.callback;\n      callback.call(eventObject, badConnectionError, eventObject);\n    }\n  }\n};\n\nSCTransport.prototype._onClose = function (code, data) {\n  delete this.socket.onopen;\n  delete this.socket.onclose;\n  delete this.socket.onmessage;\n  delete this.socket.onerror;\n  clearTimeout(this._connectTimeoutRef);\n  clearTimeout(this._pingTimeoutTicker);\n  clearTimeout(this._batchTimeout);\n\n  if (this.state === this.OPEN) {\n    this.state = this.CLOSED;\n    Emitter.prototype.emit.call(this, 'close', code, data);\n\n    this._abortAllPendingEventsDueToBadConnection('disconnect');\n  } else if (this.state === this.CONNECTING) {\n    this.state = this.CLOSED;\n    Emitter.prototype.emit.call(this, 'openAbort', code, data);\n\n    this._abortAllPendingEventsDueToBadConnection('connectAbort');\n  }\n};\n\nSCTransport.prototype._handleEventObject = function (obj, message) {\n  if (obj && obj.event != null) {\n    var response = new Response(this, obj.cid);\n    Emitter.prototype.emit.call(this, 'event', obj.event, obj.data, response);\n  } else if (obj && obj.rid != null) {\n    var eventObject = this._callbackMap[obj.rid];\n\n    if (eventObject) {\n      clearTimeout(eventObject.timeout);\n      delete eventObject.timeout;\n      delete this._callbackMap[obj.rid];\n\n      if (eventObject.callback) {\n        var rehydratedError = scErrors.hydrateError(obj.error);\n        eventObject.callback(rehydratedError, obj.data);\n      }\n    }\n  } else {\n    Emitter.prototype.emit.call(this, 'event', 'raw', message);\n  }\n};\n\nSCTransport.prototype._onMessage = function (message) {\n  Emitter.prototype.emit.call(this, 'event', 'message', message);\n  var obj = this.decode(message); // If ping\n\n  if (obj === '#1') {\n    this._resetPingTimeout();\n\n    if (this.socket.readyState === this.socket.OPEN) {\n      this.sendObject('#2');\n    }\n  } else {\n    if (Array.isArray(obj)) {\n      var len = obj.length;\n\n      for (var i = 0; i < len; i++) {\n        this._handleEventObject(obj[i], message);\n      }\n    } else {\n      this._handleEventObject(obj, message);\n    }\n  }\n};\n\nSCTransport.prototype._onError = function (err) {\n  Emitter.prototype.emit.call(this, 'error', err);\n};\n\nSCTransport.prototype._resetPingTimeout = function () {\n  if (this.pingTimeoutDisabled) {\n    return;\n  }\n\n  var self = this;\n  var now = new Date().getTime();\n  clearTimeout(this._pingTimeoutTicker);\n  this._pingTimeoutTicker = setTimeout(function () {\n    self._onClose(4000);\n\n    self.socket.close(4000);\n  }, this.pingTimeout);\n};\n\nSCTransport.prototype.getBytesReceived = function () {\n  return this.socket.bytesReceived;\n};\n\nSCTransport.prototype.close = function (code, data) {\n  code = code || 1000;\n\n  if (this.state === this.OPEN) {\n    var packet = {\n      code: code,\n      data: data\n    };\n    this.emit('#disconnect', packet);\n\n    this._onClose(code, data);\n\n    this.socket.close(code);\n  } else if (this.state === this.CONNECTING) {\n    this._onClose(code, data);\n\n    this.socket.close(code);\n  }\n};\n\nSCTransport.prototype.emitObject = function (eventObject, options) {\n  var simpleEventObject = {\n    event: eventObject.event,\n    data: eventObject.data\n  };\n\n  if (eventObject.callback) {\n    simpleEventObject.cid = eventObject.cid = this.callIdGenerator();\n    this._callbackMap[eventObject.cid] = eventObject;\n  }\n\n  this.sendObject(simpleEventObject, options);\n  return eventObject.cid || null;\n};\n\nSCTransport.prototype._handleEventAckTimeout = function (eventObject) {\n  if (eventObject.cid) {\n    delete this._callbackMap[eventObject.cid];\n  }\n\n  delete eventObject.timeout;\n  var callback = eventObject.callback;\n\n  if (callback) {\n    delete eventObject.callback;\n    var error = new TimeoutError(\"Event response for '\" + eventObject.event + \"' timed out\");\n    callback.call(eventObject, error, eventObject);\n  }\n}; // The last two optional arguments (a and b) can be options and/or callback\n\n\nSCTransport.prototype.emit = function (event, data, a, b) {\n  var self = this;\n  var callback, options;\n\n  if (b) {\n    options = a;\n    callback = b;\n  } else {\n    if (a instanceof Function) {\n      options = {};\n      callback = a;\n    } else {\n      options = a;\n    }\n  }\n\n  var eventObject = {\n    event: event,\n    data: data,\n    callback: callback\n  };\n\n  if (callback && !options.noTimeout) {\n    eventObject.timeout = setTimeout(function () {\n      self._handleEventAckTimeout(eventObject);\n    }, this.options.ackTimeout);\n  }\n\n  var cid = null;\n\n  if (this.state === this.OPEN || options.force) {\n    cid = this.emitObject(eventObject, options);\n  }\n\n  return cid;\n};\n\nSCTransport.prototype.cancelPendingResponse = function (cid) {\n  delete this._callbackMap[cid];\n};\n\nSCTransport.prototype.decode = function (message) {\n  return this.codec.decode(message);\n};\n\nSCTransport.prototype.encode = function (object) {\n  return this.codec.encode(object);\n};\n\nSCTransport.prototype.send = function (data) {\n  if (this.socket.readyState !== this.socket.OPEN) {\n    this._onClose(1005);\n  } else {\n    this.socket.send(data);\n  }\n};\n\nSCTransport.prototype.serializeObject = function (object) {\n  var str, formatError;\n\n  try {\n    str = this.encode(object);\n  } catch (err) {\n    formatError = err;\n\n    this._onError(formatError);\n  }\n\n  if (!formatError) {\n    return str;\n  }\n\n  return null;\n};\n\nSCTransport.prototype.sendObjectBatch = function (object) {\n  var self = this;\n\n  this._batchSendList.push(object);\n\n  if (this._batchTimeout) {\n    return;\n  }\n\n  this._batchTimeout = setTimeout(function () {\n    delete self._batchTimeout;\n\n    if (self._batchSendList.length) {\n      var str = self.serializeObject(self._batchSendList);\n\n      if (str != null) {\n        self.send(str);\n      }\n\n      self._batchSendList = [];\n    }\n  }, this.options.pubSubBatchDuration || 0);\n};\n\nSCTransport.prototype.sendObjectSingle = function (object) {\n  var str = this.serializeObject(object);\n\n  if (str != null) {\n    this.send(str);\n  }\n};\n\nSCTransport.prototype.sendObject = function (object, options) {\n  if (options && options.batch) {\n    this.sendObjectBatch(object);\n  } else {\n    this.sendObjectSingle(object);\n  }\n};\n\nmodule.exports.SCTransport = SCTransport;","map":{"version":3,"sources":["C:/Users/aleor/Desktop/Code/wbsc/frontend/node_modules/socketcluster-client/lib/sctransport.js"],"names":["Emitter","require","Response","querystring","WebSocket","createWebSocket","global","uri","options","scErrors","TimeoutError","BadConnectionError","SCTransport","authEngine","codecEngine","self","state","CLOSED","auth","codec","connectTimeout","pingTimeout","ackTimeout","pingTimeoutDisabled","callIdGenerator","authTokenName","_pingTimeoutTicker","_callbackMap","_batchSendList","CONNECTING","wsSocket","binaryType","socket","onopen","_onOpen","onclose","event","code","_onClose","reason","onmessage","message","flags","_onMessage","data","onerror","error","_connectTimeoutRef","setTimeout","close","prototype","Object","create","OPEN","query","schema","secure","timestampRequests","timestampParam","Date","getTime","encode","length","host","port","hostname","path","clearTimeout","_resetPingTimeout","_handshake","err","status","statusCode","_onError","toString","emit","call","callback","loadToken","token","force","authToken","authError","hydrateError","_abortAllPendingEventsDueToBadConnection","failureType","i","hasOwnProperty","eventObject","timeout","errorMessage","badConnectionError","_batchTimeout","_handleEventObject","obj","response","cid","rid","rehydratedError","decode","readyState","sendObject","Array","isArray","len","now","getBytesReceived","bytesReceived","packet","emitObject","simpleEventObject","_handleEventAckTimeout","a","b","Function","noTimeout","cancelPendingResponse","object","send","serializeObject","str","formatError","sendObjectBatch","push","pubSubBatchDuration","sendObjectSingle","batch","module","exports"],"mappings":"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","sourcesContent":["var Emitter = require('component-emitter');\r\nvar Response = require('./response').Response;\r\nvar querystring = require('querystring');\r\nvar WebSocket;\r\nvar createWebSocket;\r\n\r\nif (global.WebSocket) {\r\n  WebSocket = global.WebSocket;\r\n  createWebSocket = function (uri, options) {\r\n    return new WebSocket(uri);\r\n  };\r\n} else {\r\n  WebSocket = require('ws');\r\n  createWebSocket = function (uri, options) {\r\n    return new WebSocket(uri, null, options);\r\n  };\r\n}\r\n\r\nvar scErrors = require('sc-errors');\r\nvar TimeoutError = scErrors.TimeoutError;\r\nvar BadConnectionError = scErrors.BadConnectionError;\r\n\r\n\r\nvar SCTransport = function (authEngine, codecEngine, options) {\r\n  var self = this;\r\n\r\n  this.state = this.CLOSED;\r\n  this.auth = authEngine;\r\n  this.codec = codecEngine;\r\n  this.options = options;\r\n  this.connectTimeout = options.connectTimeout;\r\n  this.pingTimeout = options.ackTimeout;\r\n  this.pingTimeoutDisabled = !!options.pingTimeoutDisabled;\r\n  this.callIdGenerator = options.callIdGenerator;\r\n  this.authTokenName = options.authTokenName;\r\n\r\n  this._pingTimeoutTicker = null;\r\n  this._callbackMap = {};\r\n  this._batchSendList = [];\r\n\r\n  // Open the connection.\r\n\r\n  this.state = this.CONNECTING;\r\n  var uri = this.uri();\r\n\r\n  var wsSocket = createWebSocket(uri, this.options);\r\n  wsSocket.binaryType = this.options.binaryType;\r\n\r\n  this.socket = wsSocket;\r\n\r\n  wsSocket.onopen = function () {\r\n    self._onOpen();\r\n  };\r\n\r\n  wsSocket.onclose = function (event) {\r\n    var code;\r\n    if (event.code == null) {\r\n      // This is to handle an edge case in React Native whereby\r\n      // event.code is undefined when the mobile device is locked.\r\n      // TODO: This is not perfect since this condition could also apply to\r\n      // an abnormal close (no close control frame) which would be a 1006.\r\n      code = 1005;\r\n    } else {\r\n      code = event.code;\r\n    }\r\n    self._onClose(code, event.reason);\r\n  };\r\n\r\n  wsSocket.onmessage = function (message, flags) {\r\n    self._onMessage(message.data);\r\n  };\r\n\r\n  wsSocket.onerror = function (error) {\r\n    // The onclose event will be called automatically after the onerror event\r\n    // if the socket is connected - Otherwise, if it's in the middle of\r\n    // connecting, we want to close it manually with a 1006 - This is necessary\r\n    // to prevent inconsistent behavior when running the client in Node.js\r\n    // vs in a browser.\r\n\r\n    if (self.state === self.CONNECTING) {\r\n      self._onClose(1006);\r\n    }\r\n  };\r\n\r\n  this._connectTimeoutRef = setTimeout(function () {\r\n    self._onClose(4007);\r\n    self.socket.close(4007);\r\n  }, this.connectTimeout);\r\n};\r\n\r\nSCTransport.prototype = Object.create(Emitter.prototype);\r\n\r\nSCTransport.CONNECTING = SCTransport.prototype.CONNECTING = 'connecting';\r\nSCTransport.OPEN = SCTransport.prototype.OPEN = 'open';\r\nSCTransport.CLOSED = SCTransport.prototype.CLOSED = 'closed';\r\n\r\nSCTransport.prototype.uri = function () {\r\n  var query = this.options.query || {};\r\n  var schema = this.options.secure ? 'wss' : 'ws';\r\n\r\n  if (this.options.timestampRequests) {\r\n    query[this.options.timestampParam] = (new Date()).getTime();\r\n  }\r\n\r\n  query = querystring.encode(query);\r\n\r\n  if (query.length) {\r\n    query = '?' + query;\r\n  }\r\n\r\n  var host;\r\n  if (this.options.host) {\r\n    host = this.options.host;\r\n  } else {\r\n    var port = '';\r\n\r\n    if (this.options.port && ((schema === 'wss' && this.options.port !== 443)\r\n      || (schema === 'ws' && this.options.port !== 80))) {\r\n      port = ':' + this.options.port;\r\n    }\r\n    host = this.options.hostname + port;\r\n  }\r\n\r\n  return schema + '://' + host + this.options.path + query;\r\n};\r\n\r\nSCTransport.prototype._onOpen = function () {\r\n  var self = this;\r\n\r\n  clearTimeout(this._connectTimeoutRef);\r\n  this._resetPingTimeout();\r\n\r\n  this._handshake(function (err, status) {\r\n    if (err) {\r\n      var statusCode;\r\n      if (status && status.code) {\r\n        statusCode = status.code;\r\n      } else {\r\n        statusCode = 4003;\r\n      }\r\n      self._onError(err);\r\n      self._onClose(statusCode, err.toString());\r\n      self.socket.close(statusCode);\r\n    } else {\r\n      self.state = self.OPEN;\r\n      Emitter.prototype.emit.call(self, 'open', status);\r\n      self._resetPingTimeout();\r\n    }\r\n  });\r\n};\r\n\r\nSCTransport.prototype._handshake = function (callback) {\r\n  var self = this;\r\n  this.auth.loadToken(this.authTokenName, function (err, token) {\r\n    if (err) {\r\n      callback(err);\r\n    } else {\r\n      // Don't wait for this.state to be 'open'.\r\n      // The underlying WebSocket (this.socket) is already open.\r\n      var options = {\r\n        force: true\r\n      };\r\n      self.emit('#handshake', {\r\n        authToken: token\r\n      }, options, function (err, status) {\r\n        if (status) {\r\n          // Add the token which was used as part of authentication attempt\r\n          // to the status object.\r\n          status.authToken = token;\r\n          if (status.authError) {\r\n            status.authError = scErrors.hydrateError(status.authError);\r\n          }\r\n        }\r\n        callback(err, status);\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nSCTransport.prototype._abortAllPendingEventsDueToBadConnection = function (failureType) {\r\n  for (var i in this._callbackMap) {\r\n    if (this._callbackMap.hasOwnProperty(i)) {\r\n      var eventObject = this._callbackMap[i];\r\n      delete this._callbackMap[i];\r\n\r\n      clearTimeout(eventObject.timeout);\r\n      delete eventObject.timeout;\r\n\r\n      var errorMessage = \"Event '\" + eventObject.event +\r\n        \"' was aborted due to a bad connection\";\r\n      var badConnectionError = new BadConnectionError(errorMessage, failureType);\r\n\r\n      var callback = eventObject.callback;\r\n      delete eventObject.callback;\r\n      callback.call(eventObject, badConnectionError, eventObject);\r\n    }\r\n  }\r\n};\r\n\r\nSCTransport.prototype._onClose = function (code, data) {\r\n  delete this.socket.onopen;\r\n  delete this.socket.onclose;\r\n  delete this.socket.onmessage;\r\n  delete this.socket.onerror;\r\n\r\n  clearTimeout(this._connectTimeoutRef);\r\n  clearTimeout(this._pingTimeoutTicker);\r\n  clearTimeout(this._batchTimeout);\r\n\r\n  if (this.state === this.OPEN) {\r\n    this.state = this.CLOSED;\r\n    Emitter.prototype.emit.call(this, 'close', code, data);\r\n    this._abortAllPendingEventsDueToBadConnection('disconnect');\r\n\r\n  } else if (this.state === this.CONNECTING) {\r\n    this.state = this.CLOSED;\r\n    Emitter.prototype.emit.call(this, 'openAbort', code, data);\r\n    this._abortAllPendingEventsDueToBadConnection('connectAbort');\r\n  }\r\n};\r\n\r\nSCTransport.prototype._handleEventObject = function (obj, message) {\r\n  if (obj && obj.event != null) {\r\n    var response = new Response(this, obj.cid);\r\n    Emitter.prototype.emit.call(this, 'event', obj.event, obj.data, response);\r\n  } else if (obj && obj.rid != null) {\r\n    var eventObject = this._callbackMap[obj.rid];\r\n    if (eventObject) {\r\n      clearTimeout(eventObject.timeout);\r\n      delete eventObject.timeout;\r\n      delete this._callbackMap[obj.rid];\r\n\r\n      if (eventObject.callback) {\r\n        var rehydratedError = scErrors.hydrateError(obj.error);\r\n        eventObject.callback(rehydratedError, obj.data);\r\n      }\r\n    }\r\n  } else {\r\n    Emitter.prototype.emit.call(this, 'event', 'raw', message);\r\n  }\r\n};\r\n\r\nSCTransport.prototype._onMessage = function (message) {\r\n  Emitter.prototype.emit.call(this, 'event', 'message', message);\r\n\r\n  var obj = this.decode(message);\r\n\r\n  // If ping\r\n  if (obj === '#1') {\r\n    this._resetPingTimeout();\r\n    if (this.socket.readyState === this.socket.OPEN) {\r\n      this.sendObject('#2');\r\n    }\r\n  } else {\r\n    if (Array.isArray(obj)) {\r\n      var len = obj.length;\r\n      for (var i = 0; i < len; i++) {\r\n        this._handleEventObject(obj[i], message);\r\n      }\r\n    } else {\r\n      this._handleEventObject(obj, message);\r\n    }\r\n  }\r\n};\r\n\r\nSCTransport.prototype._onError = function (err) {\r\n  Emitter.prototype.emit.call(this, 'error', err);\r\n};\r\n\r\nSCTransport.prototype._resetPingTimeout = function () {\r\n  if (this.pingTimeoutDisabled) {\r\n    return;\r\n  }\r\n  var self = this;\r\n\r\n  var now = (new Date()).getTime();\r\n  clearTimeout(this._pingTimeoutTicker);\r\n\r\n  this._pingTimeoutTicker = setTimeout(function () {\r\n    self._onClose(4000);\r\n    self.socket.close(4000);\r\n  }, this.pingTimeout);\r\n};\r\n\r\nSCTransport.prototype.getBytesReceived = function () {\r\n  return this.socket.bytesReceived;\r\n};\r\n\r\nSCTransport.prototype.close = function (code, data) {\r\n  code = code || 1000;\r\n\r\n  if (this.state === this.OPEN) {\r\n    var packet = {\r\n      code: code,\r\n      data: data\r\n    };\r\n    this.emit('#disconnect', packet);\r\n\r\n    this._onClose(code, data);\r\n    this.socket.close(code);\r\n\r\n  } else if (this.state === this.CONNECTING) {\r\n    this._onClose(code, data);\r\n    this.socket.close(code);\r\n  }\r\n};\r\n\r\nSCTransport.prototype.emitObject = function (eventObject, options) {\r\n  var simpleEventObject = {\r\n    event: eventObject.event,\r\n    data: eventObject.data\r\n  };\r\n\r\n  if (eventObject.callback) {\r\n    simpleEventObject.cid = eventObject.cid = this.callIdGenerator();\r\n    this._callbackMap[eventObject.cid] = eventObject;\r\n  }\r\n\r\n  this.sendObject(simpleEventObject, options);\r\n\r\n  return eventObject.cid || null;\r\n};\r\n\r\nSCTransport.prototype._handleEventAckTimeout = function (eventObject) {\r\n  if (eventObject.cid) {\r\n    delete this._callbackMap[eventObject.cid];\r\n  }\r\n  delete eventObject.timeout;\r\n\r\n  var callback = eventObject.callback;\r\n  if (callback) {\r\n    delete eventObject.callback;\r\n    var error = new TimeoutError(\"Event response for '\" + eventObject.event + \"' timed out\");\r\n    callback.call(eventObject, error, eventObject);\r\n  }\r\n};\r\n\r\n// The last two optional arguments (a and b) can be options and/or callback\r\nSCTransport.prototype.emit = function (event, data, a, b) {\r\n  var self = this;\r\n\r\n  var callback, options;\r\n\r\n  if (b) {\r\n    options = a;\r\n    callback = b;\r\n  } else {\r\n    if (a instanceof Function) {\r\n      options = {};\r\n      callback = a;\r\n    } else {\r\n      options = a;\r\n    }\r\n  }\r\n\r\n  var eventObject = {\r\n    event: event,\r\n    data: data,\r\n    callback: callback\r\n  };\r\n\r\n  if (callback && !options.noTimeout) {\r\n    eventObject.timeout = setTimeout(function () {\r\n      self._handleEventAckTimeout(eventObject);\r\n    }, this.options.ackTimeout);\r\n  }\r\n\r\n  var cid = null;\r\n  if (this.state === this.OPEN || options.force) {\r\n    cid = this.emitObject(eventObject, options);\r\n  }\r\n  return cid;\r\n};\r\n\r\nSCTransport.prototype.cancelPendingResponse = function (cid) {\r\n  delete this._callbackMap[cid];\r\n};\r\n\r\nSCTransport.prototype.decode = function (message) {\r\n  return this.codec.decode(message);\r\n};\r\n\r\nSCTransport.prototype.encode = function (object) {\r\n  return this.codec.encode(object);\r\n};\r\n\r\nSCTransport.prototype.send = function (data) {\r\n  if (this.socket.readyState !== this.socket.OPEN) {\r\n    this._onClose(1005);\r\n  } else {\r\n    this.socket.send(data);\r\n  }\r\n};\r\n\r\nSCTransport.prototype.serializeObject = function (object) {\r\n  var str, formatError;\r\n  try {\r\n    str = this.encode(object);\r\n  } catch (err) {\r\n    formatError = err;\r\n    this._onError(formatError);\r\n  }\r\n  if (!formatError) {\r\n    return str;\r\n  }\r\n  return null;\r\n};\r\n\r\nSCTransport.prototype.sendObjectBatch = function (object) {\r\n  var self = this;\r\n\r\n  this._batchSendList.push(object);\r\n  if (this._batchTimeout) {\r\n    return;\r\n  }\r\n\r\n  this._batchTimeout = setTimeout(function () {\r\n    delete self._batchTimeout;\r\n    if (self._batchSendList.length) {\r\n      var str = self.serializeObject(self._batchSendList);\r\n      if (str != null) {\r\n        self.send(str);\r\n      }\r\n      self._batchSendList = [];\r\n    }\r\n  }, this.options.pubSubBatchDuration || 0);\r\n};\r\n\r\nSCTransport.prototype.sendObjectSingle = function (object) {\r\n  var str = this.serializeObject(object);\r\n  if (str != null) {\r\n    this.send(str);\r\n  }\r\n};\r\n\r\nSCTransport.prototype.sendObject = function (object, options) {\r\n  if (options && options.batch) {\r\n    this.sendObjectBatch(object);\r\n  } else {\r\n    this.sendObjectSingle(object);\r\n  }\r\n};\r\n\r\nmodule.exports.SCTransport = SCTransport;\r\n"]},"metadata":{},"sourceType":"script"}