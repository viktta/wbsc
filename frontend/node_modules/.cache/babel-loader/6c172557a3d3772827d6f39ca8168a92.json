{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/victor/Documents/Projects/wbsc/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { useMediaQuery } from 'react-responsive';\nconst isDesktopOrLaptop = useMediaQuery({\n  minDeviceWidth: 1224\n});\nconst isBigScreen = useMediaQuery({\n  minDeviceWidth: 1824\n});\nconst isTabletOrMobile = useMediaQuery({\n  maxWidth: 1224\n});\nconst isTabletOrMobileDevice = useMediaQuery({\n  maxDeviceWidth: 1224\n});\nconst isPortrait = useMediaQuery({\n  orientation: 'portrait'\n});\nconst isRetina = useMediaQuery({\n  minResolution: '2dppx'\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/victor/Documents/Projects/wbsc/frontend/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","useMediaQuery","isDesktopOrLaptop","minDeviceWidth","isBigScreen","isTabletOrMobile","maxWidth","isTabletOrMobileDevice","maxDeviceWidth","isPortrait","orientation","isRetina","minResolution","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAGE,MAAMC,iBAAiB,GAAGD,aAAa,CAAC;AAAEE,EAAAA,cAAc,EAAE;AAAlB,CAAD,CAAvC;AACA,MAAMC,WAAW,GAAGH,aAAa,CAAC;AAAEE,EAAAA,cAAc,EAAE;AAAlB,CAAD,CAAjC;AACA,MAAME,gBAAgB,GAAGJ,aAAa,CAAC;AAAEK,EAAAA,QAAQ,EAAE;AAAZ,CAAD,CAAtC;AACA,MAAMC,sBAAsB,GAAGN,aAAa,CAAC;AAAEO,EAAAA,cAAc,EAAE;AAAlB,CAAD,CAA5C;AACA,MAAMC,UAAU,GAAGR,aAAa,CAAC;AAAES,EAAAA,WAAW,EAAE;AAAf,CAAD,CAAhC;AACA,MAAMC,QAAQ,GAAGV,aAAa,CAAC;AAAEW,EAAAA,aAAa,EAAE;AAAjB,CAAD,CAA9B;AAEFd,QAAQ,CAACe,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAf,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { useMediaQuery } from 'react-responsive'\n\n\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\n  const isBigScreen = useMediaQuery({ minDeviceWidth: 1824 })\n  const isTabletOrMobile = useMediaQuery({ maxWidth: 1224 })\n  const isTabletOrMobileDevice = useMediaQuery({ maxDeviceWidth: 1224 })\n  const isPortrait = useMediaQuery({ orientation: 'portrait' })\n  const isRetina = useMediaQuery({ minResolution: '2dppx' })\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}