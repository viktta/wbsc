{"ast":null,"code":"var AuthEngine = function () {\n  this._internalStorage = {};\n  this.isLocalStorageEnabled = this._checkLocalStorageEnabled();\n};\n\nAuthEngine.prototype._checkLocalStorageEnabled = function () {\n  var err;\n\n  try {\n    // Some browsers will throw an error here if localStorage is disabled.\n    global.localStorage; // Safari, in Private Browsing Mode, looks like it supports localStorage but all calls to setItem\n    // throw QuotaExceededError. We're going to detect this and avoid hard to debug edge cases.\n\n    global.localStorage.setItem('__scLocalStorageTest', 1);\n    global.localStorage.removeItem('__scLocalStorageTest');\n  } catch (e) {\n    err = e;\n  }\n\n  return !err;\n};\n\nAuthEngine.prototype.saveToken = function (name, token, options, callback) {\n  if (this.isLocalStorageEnabled && global.localStorage) {\n    global.localStorage.setItem(name, token);\n  } else {\n    this._internalStorage[name] = token;\n  }\n\n  callback && callback(null, token);\n};\n\nAuthEngine.prototype.removeToken = function (name, callback) {\n  var token;\n  this.loadToken(name, function (err, authToken) {\n    token = authToken;\n  });\n\n  if (this.isLocalStorageEnabled && global.localStorage) {\n    global.localStorage.removeItem(name);\n  } else {\n    delete this._internalStorage[name];\n  }\n\n  callback && callback(null, token);\n};\n\nAuthEngine.prototype.loadToken = function (name, callback) {\n  var token;\n\n  if (this.isLocalStorageEnabled && global.localStorage) {\n    token = global.localStorage.getItem(name);\n  } else {\n    token = this._internalStorage[name] || null;\n  }\n\n  callback(null, token);\n};\n\nmodule.exports.AuthEngine = AuthEngine;","map":{"version":3,"sources":["C:/Users/aleor/Desktop/Code/wbsc/frontend/node_modules/socketcluster-client/lib/auth.js"],"names":["AuthEngine","_internalStorage","isLocalStorageEnabled","_checkLocalStorageEnabled","prototype","err","global","localStorage","setItem","removeItem","e","saveToken","name","token","options","callback","removeToken","loadToken","authToken","getItem","module","exports"],"mappings":"AAAA,IAAIA,UAAU,GAAG,YAAY;AAC3B,OAAKC,gBAAL,GAAwB,EAAxB;AACA,OAAKC,qBAAL,GAA6B,KAAKC,yBAAL,EAA7B;AACD,CAHD;;AAKAH,UAAU,CAACI,SAAX,CAAqBD,yBAArB,GAAiD,YAAY;AAC3D,MAAIE,GAAJ;;AACA,MAAI;AACF;AACAC,IAAAA,MAAM,CAACC,YAAP,CAFE,CAIF;AACA;;AACAD,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,sBAA5B,EAAoD,CAApD;AACAF,IAAAA,MAAM,CAACC,YAAP,CAAoBE,UAApB,CAA+B,sBAA/B;AACD,GARD,CAQE,OAAOC,CAAP,EAAU;AACVL,IAAAA,GAAG,GAAGK,CAAN;AACD;;AACD,SAAO,CAACL,GAAR;AACD,CAdD;;AAgBAL,UAAU,CAACI,SAAX,CAAqBO,SAArB,GAAiC,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,OAAvB,EAAgCC,QAAhC,EAA0C;AACzE,MAAI,KAAKb,qBAAL,IAA8BI,MAAM,CAACC,YAAzC,EAAuD;AACrDD,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BI,IAA5B,EAAkCC,KAAlC;AACD,GAFD,MAEO;AACL,SAAKZ,gBAAL,CAAsBW,IAAtB,IAA8BC,KAA9B;AACD;;AACDE,EAAAA,QAAQ,IAAIA,QAAQ,CAAC,IAAD,EAAOF,KAAP,CAApB;AACD,CAPD;;AASAb,UAAU,CAACI,SAAX,CAAqBY,WAArB,GAAmC,UAAUJ,IAAV,EAAgBG,QAAhB,EAA0B;AAC3D,MAAIF,KAAJ;AAEA,OAAKI,SAAL,CAAeL,IAAf,EAAqB,UAAUP,GAAV,EAAea,SAAf,EAA0B;AAC7CL,IAAAA,KAAK,GAAGK,SAAR;AACD,GAFD;;AAIA,MAAI,KAAKhB,qBAAL,IAA8BI,MAAM,CAACC,YAAzC,EAAuD;AACrDD,IAAAA,MAAM,CAACC,YAAP,CAAoBE,UAApB,CAA+BG,IAA/B;AACD,GAFD,MAEO;AACL,WAAO,KAAKX,gBAAL,CAAsBW,IAAtB,CAAP;AACD;;AAEDG,EAAAA,QAAQ,IAAIA,QAAQ,CAAC,IAAD,EAAOF,KAAP,CAApB;AACD,CAdD;;AAgBAb,UAAU,CAACI,SAAX,CAAqBa,SAArB,GAAiC,UAAUL,IAAV,EAAgBG,QAAhB,EAA0B;AACzD,MAAIF,KAAJ;;AAEA,MAAI,KAAKX,qBAAL,IAA8BI,MAAM,CAACC,YAAzC,EAAuD;AACrDM,IAAAA,KAAK,GAAGP,MAAM,CAACC,YAAP,CAAoBY,OAApB,CAA4BP,IAA5B,CAAR;AACD,GAFD,MAEO;AACLC,IAAAA,KAAK,GAAG,KAAKZ,gBAAL,CAAsBW,IAAtB,KAA+B,IAAvC;AACD;;AACDG,EAAAA,QAAQ,CAAC,IAAD,EAAOF,KAAP,CAAR;AACD,CATD;;AAWAO,MAAM,CAACC,OAAP,CAAerB,UAAf,GAA4BA,UAA5B","sourcesContent":["var AuthEngine = function () {\r\n  this._internalStorage = {};\r\n  this.isLocalStorageEnabled = this._checkLocalStorageEnabled();\r\n};\r\n\r\nAuthEngine.prototype._checkLocalStorageEnabled = function () {\r\n  var err;\r\n  try {\r\n    // Some browsers will throw an error here if localStorage is disabled.\r\n    global.localStorage;\r\n\r\n    // Safari, in Private Browsing Mode, looks like it supports localStorage but all calls to setItem\r\n    // throw QuotaExceededError. We're going to detect this and avoid hard to debug edge cases.\r\n    global.localStorage.setItem('__scLocalStorageTest', 1);\r\n    global.localStorage.removeItem('__scLocalStorageTest');\r\n  } catch (e) {\r\n    err = e;\r\n  }\r\n  return !err;\r\n};\r\n\r\nAuthEngine.prototype.saveToken = function (name, token, options, callback) {\r\n  if (this.isLocalStorageEnabled && global.localStorage) {\r\n    global.localStorage.setItem(name, token);\r\n  } else {\r\n    this._internalStorage[name] = token;\r\n  }\r\n  callback && callback(null, token);\r\n};\r\n\r\nAuthEngine.prototype.removeToken = function (name, callback) {\r\n  var token;\r\n\r\n  this.loadToken(name, function (err, authToken) {\r\n    token = authToken;\r\n  });\r\n\r\n  if (this.isLocalStorageEnabled && global.localStorage) {\r\n    global.localStorage.removeItem(name);\r\n  } else {\r\n    delete this._internalStorage[name];\r\n  }\r\n\r\n  callback && callback(null, token);\r\n};\r\n\r\nAuthEngine.prototype.loadToken = function (name, callback) {\r\n  var token;\r\n\r\n  if (this.isLocalStorageEnabled && global.localStorage) {\r\n    token = global.localStorage.getItem(name);\r\n  } else {\r\n    token = this._internalStorage[name] || null;\r\n  }\r\n  callback(null, token);\r\n};\r\n\r\nmodule.exports.AuthEngine = AuthEngine;\r\n"]},"metadata":{},"sourceType":"script"}