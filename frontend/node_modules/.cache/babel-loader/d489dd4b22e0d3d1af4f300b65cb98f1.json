{"ast":null,"code":"var cycle = require('./cycle');\n\nexports.stringify = function stringify(value, replacer, space, _options) {\n  if (arguments.length < 4) {\n    try {\n      if (arguments.length === 1) {\n        return JSON.stringify(value);\n      } else {\n        return JSON.stringify.apply(JSON, arguments);\n      }\n    } catch (e) {}\n  }\n\n  var options = _options || false;\n\n  if (typeof options === 'boolean') {\n    options = {\n      'date': options,\n      'function': options,\n      'regex': options,\n      'undefined': options,\n      'error': options,\n      'symbol': options,\n      'map': options,\n      'set': options,\n      'nan': options,\n      'infinity': options\n    };\n  }\n\n  var decycled = cycle.decycle(value, options, replacer);\n\n  if (arguments.length === 1) {\n    return JSON.stringify(decycled);\n  } else {\n    // decycle already handles when replacer is a function.\n    return JSON.stringify(decycled, Array.isArray(replacer) ? replacer : null, space);\n  }\n};\n\nexports.parse = function parse(text, reviver) {\n  var needsRetrocycle = /\"\\$jsan\"/.test(text);\n  var parsed;\n\n  if (arguments.length === 1) {\n    parsed = JSON.parse(text);\n  } else {\n    parsed = JSON.parse(text, reviver);\n  }\n\n  if (needsRetrocycle) {\n    parsed = cycle.retrocycle(parsed);\n  }\n\n  return parsed;\n};","map":{"version":3,"sources":["C:/Users/aleor/Desktop/Code/wbsc/frontend/node_modules/jsan/lib/index.js"],"names":["cycle","require","exports","stringify","value","replacer","space","_options","arguments","length","JSON","apply","e","options","decycled","decycle","Array","isArray","parse","text","reviver","needsRetrocycle","test","parsed","retrocycle"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AAEAC,OAAO,CAACC,SAAR,GAAoB,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAoCC,KAApC,EAA2CC,QAA3C,EAAqD;AAEvE,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,QAAI;AACF,UAAID,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,eAAOC,IAAI,CAACP,SAAL,CAAeC,KAAf,CAAP;AACD,OAFD,MAEO;AACL,eAAOM,IAAI,CAACP,SAAL,CAAeQ,KAAf,CAAqBD,IAArB,EAA2BF,SAA3B,CAAP;AACD;AACF,KAND,CAME,OAAOI,CAAP,EAAU,CAAE;AACf;;AAED,MAAIC,OAAO,GAAGN,QAAQ,IAAI,KAA1B;;AACA,MAAI,OAAOM,OAAP,KAAmB,SAAvB,EAAkC;AAChCA,IAAAA,OAAO,GAAG;AACR,cAAQA,OADA;AAER,kBAAYA,OAFJ;AAGR,eAASA,OAHD;AAIR,mBAAaA,OAJL;AAKR,eAASA,OALD;AAMR,gBAAUA,OANF;AAOR,aAAOA,OAPC;AAQR,aAAOA,OARC;AASR,aAAOA,OATC;AAUR,kBAAYA;AAVJ,KAAV;AAYD;;AAED,MAAIC,QAAQ,GAAGd,KAAK,CAACe,OAAN,CAAcX,KAAd,EAAqBS,OAArB,EAA8BR,QAA9B,CAAf;;AACA,MAAIG,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAOC,IAAI,CAACP,SAAL,CAAeW,QAAf,CAAP;AACD,GAFD,MAEO;AACL;AACA,WAAOJ,IAAI,CAACP,SAAL,CAAeW,QAAf,EAAyBE,KAAK,CAACC,OAAN,CAAcZ,QAAd,IAA0BA,QAA1B,GAAqC,IAA9D,EAAoEC,KAApE,CAAP;AACD;AACF,CAnCD;;AAqCAJ,OAAO,CAACgB,KAAR,GAAgB,SAASA,KAAT,CAAeC,IAAf,EAAqBC,OAArB,EAA8B;AAC5C,MAAIC,eAAe,GAAG,WAAWC,IAAX,CAAgBH,IAAhB,CAAtB;AACA,MAAII,MAAJ;;AACA,MAAIf,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1Bc,IAAAA,MAAM,GAAGb,IAAI,CAACQ,KAAL,CAAWC,IAAX,CAAT;AACD,GAFD,MAEO;AACLI,IAAAA,MAAM,GAAGb,IAAI,CAACQ,KAAL,CAAWC,IAAX,EAAiBC,OAAjB,CAAT;AACD;;AACD,MAAIC,eAAJ,EAAqB;AACnBE,IAAAA,MAAM,GAAGvB,KAAK,CAACwB,UAAN,CAAiBD,MAAjB,CAAT;AACD;;AACD,SAAOA,MAAP;AACD,CAZD","sourcesContent":["var cycle = require('./cycle');\n\nexports.stringify = function stringify(value, replacer, space, _options) {\n\n  if (arguments.length < 4) {\n    try {\n      if (arguments.length === 1) {\n        return JSON.stringify(value);\n      } else {\n        return JSON.stringify.apply(JSON, arguments);\n      }\n    } catch (e) {}\n  }\n\n  var options = _options || false;\n  if (typeof options === 'boolean') {\n    options = {\n      'date': options,\n      'function': options,\n      'regex': options,\n      'undefined': options,\n      'error': options,\n      'symbol': options,\n      'map': options,\n      'set': options,\n      'nan': options,\n      'infinity': options\n    }\n  }\n\n  var decycled = cycle.decycle(value, options, replacer);\n  if (arguments.length === 1) {\n    return JSON.stringify(decycled);\n  } else {\n    // decycle already handles when replacer is a function.\n    return JSON.stringify(decycled, Array.isArray(replacer) ? replacer : null, space);\n  }\n}\n\nexports.parse = function parse(text, reviver) {\n  var needsRetrocycle = /\"\\$jsan\"/.test(text);\n  var parsed;\n  if (arguments.length === 1) {\n    parsed = JSON.parse(text);\n  } else {\n    parsed = JSON.parse(text, reviver);\n  }\n  if (needsRetrocycle) {\n    parsed = cycle.retrocycle(parsed);\n  }\n  return parsed;\n}\n"]},"metadata":{},"sourceType":"script"}